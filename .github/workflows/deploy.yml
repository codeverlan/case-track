name: Deploy Case Track System

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  PORT: 3001

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Run tests
      run: |
        cd frontend && npm test -- --coverage --watchAll=false
        cd ../backend && npm test

    - name: Build application
      run: |
        cd frontend && npm run build
        cd ../backend && npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd backend && npm ci
        cd ../frontend && npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment package
      run: |
        mkdir -p deploy/case-track
        cp -r backend/dist deploy/case-track/backend/
        cp -r frontend/dist deploy/case-track/frontend/
        cp -r database deploy/case-track/
        cp -r templates deploy/case-track/
        cp package.json deploy/case-track/
        cp package-lock.json deploy/case-track/
        cp LICENSE deploy/case-track/
        cp README.md deploy/case-track/

        # Create deployment scripts
        cat > deploy/case-track/deploy.sh << 'EOF'
#!/bin/bash
# Case Track System Deployment Script

set -e

echo "🚀 Deploying Case Track System..."

# Check Node.js
if ! command -v node &> /dev/null; then
    echo "❌ Node.js is required. Please install Node.js 18+"
    exit 1
fi

# Install dependencies
echo "📦 Installing dependencies..."
npm ci --production

# Initialize database
echo "🗄️ Initializing database..."
cd backend
npm run db:migrate
npm run db:seed
cd ..

# Set permissions
echo "🔒 Setting permissions..."
chmod +x deploy.sh

echo "✅ Case Track System deployed successfully!"
echo "🌐 Start with: npm start"
echo "📊 Dashboard will be available at: http://localhost:3001"
EOF

        chmod +x deploy/case-track/deploy.sh

    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Case Track System v${{ github.run_number }}
        body: |
          ## Case Track System Release v${{ github.run_number }}

          Mental health therapist case management system for court-involved reunification cases.

          ### Features
          - Contact management with cross-case visibility
          - Kanban workflow tracking
          - Court date management
          - Evidence review logging
          - Contact time tracking
          - Template-based customization

          ### Installation
          1. Download the `deploy/case-track` folder
          2. Run `./deploy.sh`
          3. Access at http://localhost:3001

          ### Documentation
          - [README.md](README.md) for full documentation
          - [DEPLOYMENT.md](DEPLOYMENT.md) for deployment options
        draft: false
        prerelease: false

    - name: Upload deployment package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./deploy/case-track
        asset_name: case-track-v${{ github.run_number }}.tar.gz
        asset_content_type: application/gzip

    - name: Deploy to GitHub Pages (Documentation)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        destination_dir: docs